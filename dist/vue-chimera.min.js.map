{"version":3,"file":"vue-chimera.min.js","sources":["../node_modules/p-debounce/index.js","../src/events.js","../src/utils.js","../src/Resource.js","../src/NullResource.js","../src/VueChimera.js","../src/mixin.js","../src/components/ChimeraResource.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/cache/MemoryCache.js","../src/index.js","../src/cache/StorageCache.js"],"sourcesContent":["'use strict';\nmodule.exports = (fn, wait, opts) => {\n\tif (!Number.isFinite(wait)) {\n\t\tthrow new TypeError('Expected `wait` to be a finite number');\n\t}\n\n\topts = opts || {};\n\n\tlet leadingVal;\n\tlet timer;\n\tlet resolveList = [];\n\n\treturn function () {\n\t\tconst ctx = this;\n\t\tconst args = arguments;\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst runImmediately = opts.leading && !timer;\n\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = setTimeout(() => {\n\t\t\t\ttimer = null;\n\n\t\t\t\tconst res = opts.leading ? leadingVal : fn.apply(ctx, args);\n\n\t\t\t\tfor (resolve of resolveList) {\n\t\t\t\t\tresolve(res);\n\t\t\t\t}\n\n\t\t\t\tresolveList = [];\n\t\t\t}, wait);\n\n\t\t\tif (runImmediately) {\n\t\t\t\tleadingVal = fn.apply(ctx, args);\n\t\t\t\tresolve(leadingVal);\n\t\t\t} else {\n\t\t\t\tresolveList.push(resolve);\n\t\t\t}\n\t\t});\n\t};\n};\n","export const SUCCESS = 'success'\nexport const ERROR = 'error'\nexport const CANCEL = 'cancel'\nexport const LOADING = 'loading'\nexport const TIMEOUT = 'timeout'\n","import Axios from 'axios'\n\nexport function isPlainObject (value) {\n  return typeof value === 'object' && value && Object.prototype.toString(value) === '[object Object]'\n}\n\nexport const hasKey = (obj, key) => key in (obj || {})\n\nexport function createAxios (config) {\n  if (config instanceof Axios) {\n    return config\n  }\n  if (isPlainObject(config)) {\n    return Axios.create(config)\n  }\n  if (typeof config === 'function') {\n    if (typeof config.request === 'function') return config\n    let axios = config()\n    if (axios instanceof Axios) return axios\n  }\n  return Axios\n}\n\nexport function getServerContext (contextString) {\n  try {\n    let context = window\n    const keys = contextString.split('.')\n    keys.forEach(key => {\n      context = context[key]\n    })\n    return context\n  } catch (e) {}\n  return null\n}\n\nexport function noopReturn (arg) { return arg }\n\nexport function warn (arg, ...args) {\n  // eslint-disable-next-line no-console\n  console.warn('[Chimera]: ' + arg, ...args)\n}\n","import Axios from 'axios'\nimport pDebounce from 'p-debounce'\nimport * as events from './events'\nimport { isPlainObject, noopReturn, warn } from './utils'\nconst { CancelToken } = Axios\n\nconst INITIAL_DATA = {\n  status: null,\n  data: null,\n  headers: null,\n  error: null,\n  lastLoaded: null\n}\n\nexport default class Resource {\n  constructor (options, initial) {\n    if (typeof options === 'string') options = { url: options }\n\n    if (!options) {\n      warn('Invalid options', options)\n      throw new Error('[Chimera]: invalid options')\n    }\n\n    let {\n      autoFetch,\n      prefetch,\n      prefetchTimeout,\n      cache,\n      debounce,\n      transformer,\n      axios,\n      key,\n      interval,\n      ...request\n    } = options\n\n    request.method = (request.method || 'get').toLowerCase()\n\n    if (typeof autoFetch === 'string') {\n      this.autoFetch = autoFetch.toLowerCase() === request.method\n    } else {\n      this.autoFetch = Boolean(autoFetch)\n    }\n\n    this.key = key\n    this.prefetch = prefetch != null ? prefetch : this.autoFetch\n    this.prefetchTimeout = prefetchTimeout\n    this.cache = cache\n    this.axios = axios\n    this.fetchDebounced = debounce !== false\n      ? pDebounce(this.fetch.bind(this), debounce || 50, { leading: true })\n      : this.fetch\n\n    // Set Transformers\n    this.setTransformer(transformer)\n\n    /* istanbul ignore if */\n    if (request.data) {\n      warn('Do not use \"params\" key inside resource options, use data instead')\n    }\n\n    if (request.method !== 'get') {\n      request.data = request.params\n      delete request.params\n    }\n\n    this.request = {\n      ...request,\n      cancelToken: new CancelToken(c => {\n        this._canceler = c\n      })\n    }\n\n    this._listeners = {}\n    this.prefetched = false\n    this.loading = false\n\n    // Set Events\n    if (isPlainObject(options.on)) {\n      for (let key in options.on) {\n        this.on(key, options.on[key])\n      }\n    }\n\n    Object.assign(this, INITIAL_DATA, initial || {})\n\n    interval && this.startInterval(interval)\n  }\n\n  setTransformer (transformer) {\n    if (typeof transformer === 'function') {\n      this.responseTransformer = transformer\n      this.errorTransformer = transformer\n    } else if (isPlainObject(transformer)) {\n      const { response, error } = transformer\n      this.responseTransformer = response || noopReturn\n      this.errorTransformer = error || noopReturn\n    } else {\n      this.responseTransformer = noopReturn\n      this.errorTransformer = noopReturn\n    }\n  }\n\n  on (event, handler) {\n    let listeners = this._listeners[event] || []\n    listeners.push(handler)\n    this._listeners[event] = listeners\n    return this\n  }\n\n  emit (event) {\n    (this._listeners[event] || []).forEach(handler => {\n      handler(this, event)\n    })\n  }\n\n  fetch (force, extraOptions) {\n    return new Promise((resolve, reject) => {\n      if (this.cache && !force) {\n        let cacheValue = this.getCache()\n        if (cacheValue) {\n          this.setByResponse(cacheValue)\n          return resolve(cacheValue)\n        }\n      }\n\n      this.loading = true\n      this.emit(events.LOADING)\n\n      let { request } = this\n      if (isPlainObject(extraOptions)) {\n        // Merge extra options\n        if (extraOptions.params) {\n          const key = request.method === 'get' ? 'params' : 'data'\n          extraOptions[key] = Object.assign({}, request[key], extraOptions.params)\n        }\n        request = Object.assign({}, request, extraOptions)\n      }\n\n      // Finally make request\n      this.axios.request(request).then(res => {\n        this.loading = false\n        this.setByResponse(res)\n        this.setCache(res)\n        this.emit(events.SUCCESS)\n        resolve(res)\n      }).catch(err => {\n        this.loading = false\n        this.setByResponse(err.response)\n        if (Axios.isCancel(err)) {\n          this.emit(events.CANCEL)\n        } else if (err.message && !err.response && err.message.indexOf('timeout') !== -1) {\n          this.emit(events.TIMEOUT)\n          this.emit(events.ERROR)\n        } else {\n          this.emit(events.ERROR)\n        }\n\n        reject(err)\n      })\n    })\n  }\n\n  reload (force) {\n    return this.fetchDebounced(force)\n  }\n\n  send (extraOptions) {\n    return this.fetchDebounced(true, extraOptions)\n  }\n\n  cancel () {\n    if (typeof this._canceler === 'function') this._canceler()\n    this.request.cancelToken = new CancelToken(c => { this._canceler = c })\n  }\n\n  getCacheKey () {\n    if (this.key) return this.key\n    return (typeof window !== 'undefined' && typeof btoa !== 'undefined'\n      ? window.btoa\n      : x => x)(this.request.url +\n      this.request.params +\n      this.request.data +\n      this.request.method)\n  }\n\n  getCache () {\n    return this.cache ? this.cache.getItem(this.getCacheKey()) : undefined\n  }\n\n  setCache (value) {\n    this.cache && this.cache.setItem(this.getCacheKey(), value)\n  }\n\n  deleteCache () {\n    this.cache && this.cache.removeItem(this.getCacheKey())\n  }\n\n  setByResponse (res) {\n    res = res || {}\n    const isSuccessful = String(res.status).charAt(0) === '2'\n    this.status = res.status\n    this.headers = res.headers || {}\n    this.lastLoaded = new Date()\n    this.data = isSuccessful ? this.responseTransformer(res.data, this) : null\n    this.error = !isSuccessful ? this.errorTransformer(res.data, this) : null\n  }\n\n  startInterval (ms) {\n    /* istanbul ignore if */\n    if (typeof ms !== 'number') throw new Error('[Chimera]: interval should be number')\n    /* istanbul ignore if */\n    if (typeof process !== 'undefined' && process.server) return\n\n    this._interval = ms\n    this.stopInterval()\n    this._interval_id = setInterval(() => this.reload(true), this._interval)\n  }\n\n  stopInterval () {\n    if (this._interval_id) {\n      clearInterval(this._interval_id)\n      this._interval_id = null\n      this._interval = false\n    }\n  }\n\n  toObj () {\n    const json = {}\n    Object.keys(INITIAL_DATA).forEach(key => {\n      json[key] = this[key]\n    })\n    return json\n  }\n\n  toString () {\n    return JSON.stringify(this.toObj())\n  }\n\n  get params () {\n    return this.request.method === 'get' ? this.request.params : this.request.data\n  }\n\n  get url () {\n    return this.request.url\n  }\n\n  get method () {\n    return this.request.method\n  }\n\n  get looping () {\n    return !!this._interval\n  }\n}\n","import Resource from './Resource'\n\nexport default class NullResource extends Resource {\n\n  constructor () {\n    super({})\n  }\n\n  fetch (force) {\n    return Promise.reject(new Error('Null Resource'))\n  }\n\n  cancel () {}\n}\n","import Resource from './Resource'\nimport NullResource from './NullResource'\nimport { createAxios, hasKey, isPlainObject, getServerContext, warn } from './utils'\n\nconst shouldAutoFetch = r => r.autoFetch && (!r.prefetched || r.prefetch === 'override')\n\nexport default class VueChimera {\n  constructor (vm, { ...resources }, { deep, ssrContext, ...options }) {\n    this._vm = vm\n    this._watchers = []\n\n    this._axios = options.axios = createAxios(options.axios)\n    this._options = options\n    this._deep = deep\n    this._ssrContext = getServerContext(ssrContext)\n    this._server = vm.$isServer\n    const watchOption = {\n      immediate: true,\n      deep: this._deep,\n      sync: true\n    }\n\n    for (let key in resources) {\n      if (key.charAt(0) === '$') {\n        delete resources[key]\n        continue\n      }\n\n      let r = resources[key]\n      if (typeof r === 'function') {\n        this._watchers.push([\n          () => r.call(this._vm),\n          (t, f) => this.updateResource(key, t, f),\n          watchOption\n        ])\n      } else {\n        r = resources[key] = this.resourceFrom(r)\n        if (!this._server) {\n          shouldAutoFetch(r) && r.reload()\n        }\n      }\n    }\n\n    Object.defineProperty(resources, '$cancelAll', { value: () => this.cancelAll() })\n    Object.defineProperty(resources, '$axios', { get: () => this._axios })\n    Object.defineProperty(resources, '$loading', { get () { return !!Object.values(this).find(el => !!el.loading) } })\n    this._resources = resources\n\n    // Init computeds\n    const vmOptions = this._vm.$options\n    const computeds = vmOptions.computed = vmOptions.computed || {}\n    Object.keys(resources).forEach(key => {\n      if (hasKey(computeds, key) || hasKey(vmOptions.props, key) || hasKey(vmOptions.methods, key)) return\n      computeds[key] = () => this._resources[key]\n    })\n  }\n\n  init () {\n    this._watchers = this._watchers.map(w => this._vm.$watch(...w))\n  }\n\n  initServer () {\n    this._vm.$_chimeraPromises = []\n    Object.values(this._resources).forEach(r => {\n      if (r.prefetch) {\n        if (!r.key) {\n          warn('used prefetch with no key associated with resource!')\n          return\n        }\n        this._vm.$_chimeraPromises.push(r.fetch(true, { timeout: r.prefetchTimeout }).then(() => r).catch(() => null))\n      }\n    })\n  }\n\n  updateResource (key, newValue, oldValue) {\n    const oldResource = this._resources[key]\n    const newResource = this.resourceFrom(newValue, oldValue && oldValue.keepData ? oldResource.toObj() : null)\n\n    if (oldValue && oldResource) {\n      oldResource.stopInterval()\n      newResource.lastLoaded = oldResource.lastLoaded\n    }\n\n    if (!this._server) {\n      if (shouldAutoFetch(newResource)) newResource.reload()\n    }\n    this._vm.$set(this._resources, key, newResource)\n  }\n\n  resourceFrom (value, initial) {\n    if (value == null) return new NullResource()\n    if (typeof value === 'string') value = { url: value }\n\n    if (isPlainObject(value.on)) {\n      Object.entries(value.on).forEach(([event, handler]) => {\n        if (typeof handler === 'function') {\n          handler = handler.bind(this._vm)\n        }\n        if (typeof handler === 'string') handler = this._vm[handler]\n        value.on[event] = handler\n      })\n    }\n\n    const baseOptions = Object.create(this._options)\n    const r = new Resource(Object.assign(baseOptions, value), initial)\n\n    if (!this._server && !initial && r.key && r.prefetch && this._ssrContext) {\n      initial = this._ssrContext[value.key]\n      if (initial) initial.prefetched = true\n      Object.assign(r, initial)\n    }\n    return r\n  }\n\n  cancelAll () {\n    Object.values(this._resources).forEach(r => {\n      r.cancel()\n    })\n  }\n\n  destroy () {\n    const vm = this._vm\n\n    this.cancelAll()\n    Object.values(this._resources).forEach(r => {\n      r.stopInterval()\n    })\n    delete vm._chimera\n  }\n}\n","import VueChimera from './VueChimera'\nimport { isPlainObject } from './utils'\n\nexport default (options = {}) => ({\n  beforeCreate () {\n    const vmOptions = this.$options\n    let chimera\n\n    // Stop if instance doesn't have chimera or already initialized\n    /* istanbul ignore if */\n    if (!vmOptions.chimera || vmOptions._chimera) return\n\n    if (typeof vmOptions.chimera === 'function') {\n      // Initialize with function\n      vmOptions.chimera = vmOptions.chimera.call(this)\n    }\n    /* istanbul ignore else */\n    if (isPlainObject(vmOptions.chimera)) {\n      const { $options, ...resources } = vmOptions.chimera\n      chimera = new VueChimera(this, resources, { ...options, ...$options })\n    } else {\n      throw new Error('[Chimera]: chimera options should be an object or a function that returns object')\n    }\n\n    this._chimera = chimera\n    if (!Object.prototype.hasOwnProperty.call(this, '$chimera')) {\n      Object.defineProperty(this, '$chimera', {\n        get: () => chimera._resources\n      })\n    }\n  },\n\n  data () {\n    /* istanbul ignore if */\n    if (!this._chimera) return {}\n    return {\n      $chimera: this._chimera._resources\n    }\n  },\n\n  created () {\n    /* istanbul ignore if */\n    if (!this._chimera) return\n    this._chimera.init()\n    this.$isServer && this._chimera.initServer()\n  },\n\n  beforeDestroy () {\n    /* istanbul ignore if */\n    if (!this._chimera) return\n    this._chimera.destroy()\n  },\n\n  serverPrefetch (...args) {\n    /* istanbul ignore if */\n    if (!this.$_chimeraPromises) return\n    const ChimeraSSR = require('../ssr/index')\n    return Promise.all(this.$_chimeraPromises).then(results => {\n      results.forEach(r => {\n        r && ChimeraSSR.addResource(r)\n      })\n    })\n  }\n})\n","<script>\nimport NullResource from \"../NullResource\";\nimport Resource from \"../Resource\";\nimport * as events from \"../events\"\nimport { getServerContext, createAxios } from \"../utils\";\n\nexport default {\n\n    inheritAttrs: false,\n\n    props: {\n        options: {\n            type: [Object, String],\n            required: true,\n        },\n        tag: {\n            type: String,\n            default: null,\n        }\n    },\n\n    data () {\n        return {\n            resource: this.getResource()\n        }\n    },\n\n    beforeCreate() {\n        this._ssrContext = getServerContext(this.$chimeraOptions.ssrContext)\n    },\n\n    mounted() {\n        if (this.resource.autoFetch) {\n            this.resource.reload()\n        }\n    },\n\n    render (h) {\n        let result = this.$scopedSlots.default(this.resource)\n        if (Array.isArray(result)) {\n            result = result.concat(this.$slots.default)\n        } else {\n            result = [result].concat(this.$slots.default)\n        }\n        return this.tag ? h(this.tag, result) : result[0]\n    },\n\n    methods: {\n        getResource () {\n            let value = this.options\n            if (value == null) return new NullResource()\n            if (typeof value === 'string') value = { url: value }\n\n            if (!this.$chimeraOptions.axios) {\n                this.$chimeraOptions.axios = createAxios()\n            }\n\n            const resource = new Resource({\n                ...this.$chimeraOptions,\n                ...value,\n            })\n\n            Object.values(events).forEach(ev => {\n                resource.on(ev, () => this.$emit(ev, resource))\n            })\n\n            resource.on('success', () => {\n                this.$nextTick(this.$forceUpdate)\n            })\n\n            if (!this._server && resource.key && resource.prefetch && this._ssrContext) {\n                const initial = this._ssrContext[value.key]\n                if (initial) initial.prefetched = true\n                Object.assign(resource, initial)\n            }\n\n            return resource\n        }\n    }\n\n}\n</script>\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","export class MemoryCache {\n  constructor (expiration) {\n    this.expiration = expiration || 1000 * 60\n    this._store = {}\n  }\n\n  /**\n     *\n     * @param key         Key for the cache\n     * @param value       Value for cache persistence\n     * @param expiration  Expiration time in milliseconds\n     */\n  setItem (key, value, expiration) {\n    this._store[key] = {\n      expiration: Date.now() + (expiration || this.expiration),\n      value\n    }\n  }\n\n  /**\n     * If Cache exists return the Parsed Value, If Not returns {null}\n     *\n     * @param key\n     */\n  getItem (key) {\n    let item = this._store[key]\n\n    if (item && item.value && Date.now() <= item.expiration) {\n      return item.value\n    }\n\n    this.removeItem(key)\n    return null\n  }\n\n  removeItem (key) {\n    delete this._store[key]\n  }\n\n  keys () {\n    return Object.keys(this._store)\n  }\n\n  all () {\n    return this.keys().reduce((obj, str) => {\n      obj[str] = this._store[str]\n      return obj\n    }, {})\n  }\n\n  length () {\n    return this.keys().length\n  }\n\n  clear () {\n    this._store = {}\n  }\n}\n","import mixin from './mixin'\nimport ChimeraResource from './components/ChimeraResource.vue'\n\nconst plugin = {\n\n  options: {\n    axios: null,\n    cache: null,\n    debounce: 50,\n    deep: true,\n    keepData: true,\n    autoFetch: 'get', // false, true, '%METHOD%',\n    prefetch: false,\n    prefetchTimeout: 4000,\n    transformer: null,\n    ssrContext: null\n  },\n\n  install (Vue, options = {}) {\n    Object.keys(options).forEach(key => {\n      if (key in this.options) {\n        this.options[key] = options[key]\n      }\n    })\n\n    Vue.mixin(mixin(this.options))\n    Vue.component('chimera-resource', ChimeraResource)\n    Vue.prototype.$chimeraOptions = this.options\n  }\n\n}\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin, plugin.options)\n}\n\nexport default plugin\n\nexport * from './events'\nexport { StorageCache } from './cache/StorageCache'\nexport { MemoryCache } from './cache/MemoryCache'\n","import { MemoryCache } from './MemoryCache'\n\nexport class StorageCache extends MemoryCache {\n  constructor (key, expiration, sessionStorage = false) {\n    super(expiration)\n    this.key = key\n\n    const storage = sessionStorage ? 'sessionStorage' : 'localStorage'\n    /* istanbul ignore if */\n    if (typeof window === 'undefined' || !window[storage]) {\n      throw Error(`StorageCache: ${storage} is not available.`)\n    } else {\n      this.storage = window[storage]\n    }\n\n    try {\n      this._store = JSON.parse(this.storage.getItem(key)) || {}\n    } catch (e) {\n      this.clear()\n      this._store = {}\n    }\n  }\n\n  setItem (key, value, expiration) {\n    super.setItem(key, value, expiration)\n    this.storage.setItem(this.key, JSON.stringify(this._store))\n  }\n\n  clear () {\n    this.storage.removeItem(this.key)\n  }\n}\n"],"names":["fn","wait","opts","Number","isFinite","TypeError","leadingVal","timer","resolveList","ctx","this","args","arguments","Promise","resolve","runImmediately","leading","clearTimeout","setTimeout","res","apply","push","SUCCESS","ERROR","CANCEL","LOADING","TIMEOUT","isPlainObject","value","Object","prototype","toString","hasKey","obj","key","createAxios","config","Axios","create","request","axios","getServerContext","contextString","context","window","split","forEach","e","noopReturn","arg","warn","console","CancelToken","INITIAL_DATA","status","data","headers","error","lastLoaded","Resource","constructor","options","initial","url","Error","autoFetch","prefetch","prefetchTimeout","cache","debounce","transformer","interval","method","toLowerCase","Boolean","fetchDebounced","pDebounce","fetch","bind","setTransformer","params","cancelToken","c","_canceler","_listeners","prefetched","loading","on","assign","startInterval","responseTransformer","errorTransformer","response","event","handler","listeners","emit","force","extraOptions","reject","cacheValue","getCache","setByResponse","events","then","setCache","catch","err","isCancel","message","indexOf","reload","send","cancel","getCacheKey","btoa","x","getItem","undefined","setItem","deleteCache","removeItem","isSuccessful","String","charAt","Date","ms","process","server","_interval","stopInterval","_interval_id","setInterval","clearInterval","toObj","json","keys","JSON","stringify","NullResource","shouldAutoFetch","r","VueChimera","vm","resources","deep","ssrContext","_vm","_watchers","_axios","_options","_deep","_ssrContext","_server","$isServer","watchOption","immediate","sync","call","t","f","updateResource","resourceFrom","defineProperty","cancelAll","get","values","find","el","_resources","vmOptions","$options","computeds","computed","props","methods","init","map","w","$watch","initServer","$_chimeraPromises","timeout","newValue","oldValue","oldResource","newResource","keepData","$set","entries","baseOptions","destroy","_chimera","beforeCreate","chimera","hasOwnProperty","$chimera","created","beforeDestroy","serverPrefetch","ChimeraSSR","require","all","results","addResource","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","shadowRoot","originalRender","h","existing","concat","MemoryCache","expiration","_store","now","item","reduce","str","length","clear","plugin","install","Vue","mixin","component","ChimeraResource","$chimeraOptions","GlobalVue","global","use","sessionStorage","storage","parse"],"mappings":"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"}